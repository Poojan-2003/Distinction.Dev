name: Deploy to EC2 on Push

on:
  push:
    branches:
      - main  # Trigger on push to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout Code
      uses: actions/checkout@v2

    # Step 2: Set up SSH for EC2
    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.EC2_SSH_KEY }}  # Add your private SSH key in GitHub secrets

    - name: Deploy on EC2
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << EOF
          set -e

          # Define variables
          REPO_NAME="Distinction.Dev"
          REPO_URL="https://github.com/Poojan-2003/$REPO_NAME.git"  # Replace with your repo URL
          CLONE_DIR="/home/ubuntu/$REPO_NAME"

          echo "Checking if the repository exists..."
          if [ ! -d "$CLONE_DIR" ]; then
            echo "Cloning repository..."
            
            # Attempt to clone the repository
            if ! git clone $REPO_URL $CLONE_DIR; then
              echo "Failed to clone the repository. Please check the URL or permissions."
              exit 1
            fi
          else
            echo "Repository already exists. Pulling latest changes..."
            cd $CLONE_DIR
            if ! git pull; then
              echo "Failed to pull the latest changes. Please check the repository state."
              exit 1
            fi
          fi

          echo "Building Docker images..."
          cd $CLONE_DIR
          docker build -t frontend ./frontend || { echo "Failed to build frontend image"; exit 1; }
          docker build -t backend ./backend || { echo "Failed to build backend image"; exit 1; }

          echo "Starting Docker Compose..."
          docker-compose up -d || { echo "Failed to start Docker Compose"; exit 1; }
        EOF

      env:
        EC2_HOST: ${{ secrets.EC2_HOST }}
        EC2_USER: ${{ secrets.EC2_USER }}
